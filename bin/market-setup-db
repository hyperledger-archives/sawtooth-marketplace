#!/usr/bin/env python3

# Copyright 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# -----------------------------------------------------------------------------

import sys
import argparse

import rethinkdb as rdb
from rethinkdb.errors import RqlRuntimeError

r = None


def parse_args(args):
    parser = argparse.ArgumentParser()
    parser.add_argument('--host',
                        help='The host for the database',
                        default='localhost')
    parser.add_argument('--port',
                        help='The port for the database',
                        default='28015')
    parser.add_argument('--name',
                        help='The name of the database',
                        default='marketplace')
    return parser.parse_args(args)


def setup_db(host, port, name):
    print("*"*60)
    """
    import rethinkdb as rdb
    r = rdb.RethinkDB()
    r.connect('localhost', 28015).repl()
    """
    r = rdb.RethinkDB()
    conn = r.connect(host=host, port=port)
    print('Connection opened')
    try:
        print('Creating database:', name)
        r.db_create(name).run(conn)

        print('Creating table: accounts')
        r.db(name).table_create('accounts', primary_key='delta_id').run(conn)
        r.db(name).table('accounts').index_create('public_key').run(conn)

        print('Creating table: assets')
        r.db(name).table_create('assets', primary_key='delta_id').run(conn)
        r.db(name).table('assets').index_create('name').run(conn)

        print('Creating table: offers')
        r.db(name).table_create('offers', primary_key='delta_id').run(conn)
        r.db(name).table('offers').index_create('id').run(conn)

        print('Creating table: holdings')
        r.db(name).table_create('holdings', primary_key='delta_id').run(conn)
        r.db(name).table('holdings').index_create('id').run(conn)

        print('Creating table: blocks')
        r.db(name).table_create('blocks', primary_key='block_num').run(conn)
        r.db(name).table('blocks').index_create('block_id').run(conn)

        print('Creating table: auth')
        r.db(name).table_create('auth', primary_key='email').run(conn)
        r.db(name).table('auth').index_create('public_key').run(conn)

    except RqlRuntimeError:
        print('Database already exists:', name)

    finally:
        conn.close()
        print('Connection closed')


if __name__ == '__main__':
    opts = parse_args(sys.argv[1:])
    setup_db(opts.host, opts.port, opts.name)
