#! /usr/bin/env python3

# Copyright 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# -----------------------------------------------------------------------------

from glob import glob
import os
import re
import tempfile
from os.path import dirname as DIRNAME

from grpc.tools.protoc import main as _protoc

TOP_DIR = DIRNAME(DIRNAME(__file__))
SRC_DIR = os.path.join(TOP_DIR, 'protos')


def make_protobuf(path, pkg_name):
    OUT_DIR = os.path.join(TOP_DIR, path, pkg_name)
    os.makedirs(OUT_DIR, exist_ok=True)

    init_py = os.path.join(OUT_DIR, '__init__.py')

    if not os.path.exists(init_py):
        with open(init_py, mode='w'):
            pass

    with tempfile.TemporaryDirectory() as tmp_dir:
        tmp_pkg_dir = os.path.join(tmp_dir, pkg_name)
        os.makedirs(tmp_pkg_dir)

        cwd = os.getcwd()
        os.chdir(SRC_DIR)
        proto_files = glob("*.proto")
        os.chdir(cwd)

        for proto in proto_files:
            src = os.path.join(SRC_DIR, proto)
            dst = os.path.join(tmp_pkg_dir, proto)
            with open(src, encoding='utf-8') as fin:
                with open(dst, "w", encoding='utf-8') as fout:
                    src_contents = fin.read()
                    fixed_contents = fix_import(src_contents, pkg_name)
                    fout.write(fixed_contents)

        _protoc([
            __file__,
            "-I=%s" % tmp_dir,
            "--python_out=%s" % os.path.join(TOP_DIR, path),
        ] + glob("%s/*.proto" % tmp_pkg_dir))
        print("Generated protobuf classes: {}".format(OUT_DIR))

def fix_import(contents, pkg, sub_dir=False):
    pattern = r'^import "(.*)\.proto\"'
    if sub_dir:
        template = r'import "%s/\1_pb2/\1.proto"'
    else:
        template = r'import "%s/\1.proto"'

    return re.sub(
        pattern,
        lambda match: match.expand(template) % pkg,
        contents,
        flags=re.MULTILINE
    )

if __name__ == '__main__':
    make_protobuf('processor', 'marketplace_processor/protobuf')
    make_protobuf('server', 'marketplace_rest_api/protobuf')
    make_protobuf('ledger_sync', 'marketplace_ledger_sync/protobuf')
    make_protobuf('transaction_creation', 'marketplace_transaction/protobuf')
